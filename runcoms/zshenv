# -*- mode: sh; eval: (sh-set-shell "zsh") -*-
#
# Defines environment variables.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ( "$SHLVL" -eq 1 && ! -o LOGIN ) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

# XDG and systemd
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
# https://www.freedesktop.org/wiki/Software/xdg-user-dirs/
# https://www.freedesktop.org/software/systemd/man/file-hierarchy.html

## $XDG_CONFIG_HOME: $HOME/.config
if [[ ! -x "$XDG_CONFIG_HOME" ]]; then
    shell_config="$HOME/.config/shell"
else
    shell_config="$XDG_CONFIG_HOME/shell"
fi

if [[ ! -x "$shell_config" ]]; then
    mkdir -p "$shell_config"
fi

## XDG_DATA_HOME: $HOME/.local/share
if [[ ! -x "$XDG_DATA_HOME" ]]; then
    shell_data="$HOME/.local/share/shell"
else
    shell_data="$XDG_DATA_HOME/shell"
fi

if [[ ! -x "$shell_data" ]]; then
    mkdir -p "$shell_data"
fi

# Path ------------------------------------------------------------

# /etc/zprofile is sourced after ~/.zshenv for interactive shells
# on macOS these two get added to front of path there
# Set the list of directories that Zsh searches for programs.
path=(
  /usr/local/{bin,sbin}
  $path
)

# echo $(systemd-path user-binaries)
path=("$HOME"/bin $path)
path=("$HOME"/.local/bin $path)

# more PATH config
if [ -f ${shell_config}/path.zsh.inc ] ; then
    # shellcheck source=/dev/null
    source "${shell_config}"/path.zsh.inc
fi

# https://github.com/golang/go/wiki/SettingGOPATH - https://golang.org/doc/code.html#GOPATH
# mkdir -p ~/go/src/github.com ; mkdir -p ~/go/bin
# NOTE: `go` executable must be in PATH
if [[ -d $(go env GOPATH) ]] ; then
    # export GOPATH=$HOME/go
    export GOPATH=$(go env GOPATH)
    path+=$(go env GOPATH)/bin
fi

# https://github.com/nvm-sh/nvm#installing-and-updating
# .zprezto has built-in support for nvm via node module, so do not need
# See node module:  https://github.com/sorin-ionescu/prezto/tree/master/modules/node
# export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
# export NVM_DIR="$( printf %s "${HOME}/.nvm" )"

# perl local modules
# https://metacpan.org/pod/local::lib
if [ -d $HOME/perl5/lib/perl5 ] ; then
    # sets PERL5LIB and others
    eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)"
    # should warn that it is already in PATH
    path+=$HOME/perl5/bin
fi

# # Set platform-specific enVARIABLES, PATHs
# if [[ "$OSTYPE" == darwin* ]]
# then
#     # http://www.funtoo.org/Keychain
#     # brew install keychain -> /usr/local/bin/keychain
#     # NOTE: The --inherit any option causes keychain to inherit any
#     #     ssh key passphrases stored in your Apple MacOS Keychain. If
#     #     you would prefer for this to not happen, then this option
#     #     can be omitted.
#    eval "$(keychain --eval --quiet --agents ssh --inherit any id_rsa)"
# fi

if [[ "$OSTYPE" == linux* ]]
then
    # http://www.funtoo.org/Keychain
    # sudo apt install keychain
    if [ -x /usr/bin/keychain ]; then
        keychainpath=/usr/bin/keychain
        #eval "$($keychainpath --quiet --eval --agents ssh --inherit any id_rsa)"
        eval "$($keychainpath --quiet --noask --eval --agents ssh --inherit any id_rsa)"
        unset keychainpath
   fi
fi

# move envariable setting to zshenv
case $OSTYPE in
    darwin*)
        export EMACSCLIENT=/Applications/Emacs.app/Contents/MacOS/bin/emacsclient
        alias emacsclient=$EMACSCLIENT
        ;;
    *)
        export EMACSCLIENT=emacsclient
        ;;
esac

# per host environment variables
nodename=$(uname -n)
if [[ -f "${shell_config}"/env.$nodename.sh ]] ; then
    # shellcheck source=/dev/null
    source "${shell_config}"/env.$nodename.sh
fi
